name: Semantic Release

on:
  push:
    branches: [ master, upgrade/prisma-and-dependencies ]
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install semantic-release dependencies
      run: |
        npm install --save-dev \
          semantic-release \
          @semantic-release/changelog \
          @semantic-release/git \
          @semantic-release/github \
          @semantic-release/npm \
          @semantic-release/commit-analyzer \
          @semantic-release/release-notes-generator \
          conventional-changelog-conventionalcommits
        
    - name: Build and test
      run: |
        npm run gen-example
        npm run test:type-check
        npm run lint
        npm run test:basic
        
    - name: Build package
      run: ./package.sh
      
    - name: Semantic Release (with npm lifecycle)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: npm run release

    - name: Version docs for new release
      env:
        DOCS_VERSION_ON_PATCH: '1'
      run: node scripts/auto-docs-version.mjs

    - name: Commit and push docs version bump (if any)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash
      run: |
        set -euo pipefail
        if [ -n "$(git status --porcelain)" ]; then
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add website/versioned_docs website/versioned_sidebars website/versions.json
          LAST_TAG=$(git describe --tags --abbrev=0 || echo "latest")
          git commit -m "docs: snapshot docs for ${LAST_TAG} [skip ci]"
          git push origin HEAD:${GITHUB_REF_NAME}
        else
          echo "No docs changes to commit"
        fi